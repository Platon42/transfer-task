create schema TRANSFER;

create table BENEFICIARY
(
	BENEFICIARY_ID INTEGER default (NEXT VALUE FOR TRANSFER.SYSTEM_SEQUENCE_E7F9D7C8_2421_4C5E_A770_9E8A8C4B6BF8) auto_increment,
	STREET_LINE VARCHAR(50),
	CITY VARCHAR(50),
	COUNTRY VARCHAR(3),
	POSTCODE VARCHAR(20),
	constraint BENEFICIARY_PK
		primary key (BENEFICIARY_ID)
);

create table BENEFICIARY_ACCOUNT
(
	BENEFICIARY_ACCOUNT_ID INTEGER default (NEXT VALUE FOR TRANSFER.SYSTEM_SEQUENCE_77A8FC12_6985_4849_8041_BC25A850BE46) auto_increment,
	ACCOUNT_NO BIGINT not null
		unique,
	NAME VARCHAR(50),
	IS_CLIENT BOOLEAN,
	BENEFICIARY_ID INTEGER,
	CURRENCY VARCHAR(10) not null,
	constraint BENEFICIARY_ACCOUNT_BENEFICIARY_BENEFICIARY_ID_FK
		foreign key (BENEFICIARY_ID) references BENEFICIARY
			on update cascade on delete cascade
);

create unique index BENEFICIARY_ACCOUNT_ACCOUNT_ID_UINDEX
	on BENEFICIARY_ACCOUNT (BENEFICIARY_ACCOUNT_ID);

create unique index PRIMARY_KEY_39
	on BENEFICIARY_ACCOUNT (BENEFICIARY_ACCOUNT_ID);

create unique index PRIMARY_KEY_393
	on BENEFICIARY_ACCOUNT (BENEFICIARY_ACCOUNT_ID);

create unique index PRIMARY_KEY_4
	on BENEFICIARY_ACCOUNT (BENEFICIARY_ACCOUNT_ID);

alter table BENEFICIARY_ACCOUNT
	add constraint BENEFICIARY_ACCOUNT_PK
		primary key (BENEFICIARY_ACCOUNT_ID);

create table CLIENT
(
	CLIENT_ID INTEGER default (NEXT VALUE FOR TRANSFER.SYSTEM_SEQUENCE_7B20F088_3968_49E8_878C_0FE9522BC903) auto_increment,
	FIRST_NAME VARCHAR(50) not null,
	LAST_NAME VARCHAR(50) not null,
	MIDDLE_NAME VARCHAR(50),
	BIRTHDAY DATE not null,
	SEX INTEGER not null,
	RESIDENT_COUNTRY VARCHAR(20) not null,
	constraint CLIENT_PK
		primary key (CLIENT_ID)
);

create table CLIENT_ACCOUNT
(
	CLIENT_ACCOUNT_ID INTEGER default (NEXT VALUE FOR TRANSFER.SYSTEM_SEQUENCE_AA21E30E_5830_4F4A_A832_46B086DB4E06) auto_increment,
	ACCOUNT_NO BIGINT not null
		unique,
	BALANCE DOUBLE default 0,
	CURRENCY VARCHAR(3),
	CREATED_AT TIMESTAMP default CURRENT_TIMESTAMP(),
	UPDATED_AT TIMESTAMP,
	NAME VARCHAR(50),
	COUNTRY_OF_ISSUE VARCHAR(20),
	CLIENT_ID INTEGER not null,
	constraint ACCOUNT_PK
		primary key (CLIENT_ACCOUNT_ID),
	constraint CLIENT_ACCOUNT_CLIENT_CLIENT_ID_FK
		foreign key (CLIENT_ID) references CLIENT
			on update cascade on delete cascade
);

create table TRANSACTION
(
	TRANSACTION_ID INTEGER default (NEXT VALUE FOR TRANSFER.SYSTEM_SEQUENCE_7C807568_188A_46C5_A9C9_50AEE2F35EB4) auto_increment,
	SOURCE_ACCOUNT_ID INTEGER not null,
	TARGET_ACCOUNT_ID INTEGER,
	AMOUNT INTEGER,
	CURRENCY VARCHAR(3) not null,
	CREATED_AT TIMESTAMP WITH TIME ZONE not null,
	TRANSACTION_TYPE VARCHAR(20),
	constraint TRANSACTION_HISTORY_PK
		primary key (TRANSACTION_ID)
);

create table BALANCE
(
	BALANCE_ID INTEGER default (NEXT VALUE FOR TRANSFER.SYSTEM_SEQUENCE_36C038F8_AC55_4DC8_A73D_75822EA37CE8) auto_increment,
	ACCOUNT_ID INTEGER,
	TRANSACTION_ID INTEGER,
	BEFORE_BALANCE DOUBLE,
	PAST_BALANCE DOUBLE,
	constraint BALANCE_HISTORY_PK
		primary key (BALANCE_ID),
	constraint BALANCE_HISTORY_ACCOUNT_ACCOUNT_ID_FK
		foreign key (ACCOUNT_ID) references CLIENT_ACCOUNT
			on update cascade on delete cascade,
	constraint BALANCE_HISTORY_TRANSACTION_HISTORY_TRANSACTION_ID_FK
		foreign key (TRANSACTION_ID) references TRANSACTION
			on update cascade on delete cascade
);

